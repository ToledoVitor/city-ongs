name: Pre-release

on:
  push:
    branches:
      - 'main'

env:
    DOCKER_REGISTRY: southamerica-east1-docker.pkg.dev
    DOCKER_REPO: sitts-project/cloud-run-source-deploy
    REGION: southamerica-east1
    SERVICE: sitts
    PROJECT_ID: sitts-project
    ENV: production

concurrency:
  group: 'pre-release'
  cancel-in-progress: false

jobs:
  pre_release:
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      contents: "write"
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          export_environment_variables: true
          project_id: "${{ env.PROJECT_ID}}"
          token_format: "access_token"
          workload_identity_provider: "projects/455340212401/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
          service_account: "github-deploy@sitts-project.iam.gserviceaccount.com"

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: buildx

      - name: Docker auth
        id: docker-auth
        uses: "docker/login-action@v3"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.DOCKER_REGISTRY }}"

      - id: timestamp
        run: |
          date +'tag=v%Y.%m.%d-b%H%M%S' >> $GITHUB_OUTPUT

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ env.SERVICE }}:${{ steps.timestamp.outputs.tag }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          version: ">= 452.0.0"

      - name: Pre-deploy (migrate and collectstatic)
        run: |
          gcloud run jobs update ${{ env.SERVICE }}-pre-deploy \
            --set-env-vars=ENV=${{ env.ENV }} \
            --labels ^,^application=${{ env.SERVICE }},component=pre-deploy \
            --region=${{ env.REGION }} \
            --image=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ env.SERVICE }}:${{ steps.timestamp.outputs.tag }} \
            --execute-now \
            --wait

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          project_id: ${{ env.PROJECT_ID}}
          image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ env.SERVICE }}:${{ steps.timestamp.outputs.tag }}
          revision_traffic: 'LATEST=100'
          labels: |-
            application=${{ env.SERVICE }}
            component=api
          env_vars: |
            ENV=${{ env.ENV }}

      - name: Tag staging docker image
        run: |
          gcloud artifacts docker tags add \
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ env.SERVICE }}:${{ steps.timestamp.outputs.tag }} \
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ env.SERVICE }}:staging

      - name: Create git tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.timestamp.outputs.tag }}",
              sha: context.sha,
            })
