# Generated by Django 5.1.4 on 2025-01-19 23:25

import uuid

import django.db.models.deletion
import django.db.models.fields
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contracts", "__first__"),
    ]

    operations = [
        migrations.CreateModel(
            name="ExpenseSource",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=64, verbose_name="Nome da fonte")),
                (
                    "document",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="CPF/CNPJ da fonte"
                    ),
                ),
            ],
            options={
                "verbose_name": "Fonte de Despesa",
                "verbose_name_plural": "Fonte de Despesas",
            },
        ),
        migrations.CreateModel(
            name="HistoricalAccountability",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "month",
                    models.IntegerField(
                        choices=[
                            (1, "janeiro"),
                            (2, "fevereiro"),
                            (3, "março"),
                            (4, "abril"),
                            (5, "maio"),
                            (6, "junho"),
                            (7, "julho"),
                            (8, "agosto"),
                            (9, "setembro"),
                            (10, "outubro"),
                            (11, "novembro"),
                            (12, "dezembro"),
                        ],
                        default=1,
                        verbose_name="Mês",
                    ),
                ),
                ("year", models.IntegerField(default=0, verbose_name="Ano")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ANALYZING", "em análise"),
                            ("CORRECTING", "correção"),
                            ("APPROVED", "aprovado"),
                            ("APPROVED_WITH_PENDENCE", "aprovado com ressalva"),
                            ("REJECTED", "rejeitado"),
                        ],
                        default="ANALYZING",
                        max_length=22,
                        verbose_name="Status",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Relatório",
                "verbose_name_plural": "historical Relatórios",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAccountabilityFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "category",
                    models.CharField(max_length=128, verbose_name="Tipo de Anexo"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Receita",
                "verbose_name_plural": "historical Receitas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalExpense",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("paid", models.BooleanField(default=False, verbose_name="Pago")),
                (
                    "reconciled",
                    models.BooleanField(default=False, verbose_name="Conciliado"),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Valor da Despesa"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Despesa",
                "verbose_name_plural": "historical Despesas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalExpenseAnalysis",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ANALYZING", "em análise"),
                            ("CORRECTING", "correção"),
                            ("APPROVED", "aprovado"),
                            ("APPROVED_WITH_PENDENCE", "aprovado com ressalva"),
                            ("REJECTED", "rejeitado"),
                        ],
                        default="ANALYZING",
                        max_length=22,
                        verbose_name="Status",
                    ),
                ),
                (
                    "comments",
                    models.CharField(max_length=256, verbose_name="Comentários"),
                ),
                (
                    "pending",
                    models.CharField(max_length=256, verbose_name="Pendências"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Análise de Despesa",
                "verbose_name_plural": "historical Análise de Despesas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRevenue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Valor da Despesa"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Recurso",
                "verbose_name_plural": "historical Recursos",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Revenue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Valor da Despesa"
                    ),
                ),
            ],
            options={
                "verbose_name": "Recurso",
                "verbose_name_plural": "Recursos",
            },
        ),
        migrations.CreateModel(
            name="RevenueSource",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=64, verbose_name="Nome da fonte")),
                (
                    "document",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="CPF/CNPJ da fonte"
                    ),
                ),
                (
                    "contract_number",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Número do contrato",
                    ),
                ),
                (
                    "origin",
                    models.CharField(
                        choices=[
                            ("FEDERAL", "Federal"),
                            ("STATE", "Estadual"),
                            ("MUNICIPAL", "Municipal"),
                            ("COUNTERPART_PARTNER", "Contrapartida de parceiro"),
                            ("PRIVATE_SPONSOR", "Patrocinador privado"),
                        ],
                        default="FEDERAL",
                        max_length=19,
                        verbose_name="Origem da Fonte",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("NOT_APPLIABLE", "Não Aplicavél"),
                            ("COOPERATION_AGREEMENT", "Acordo de Cooperação"),
                            ("AGREEMENT", "Convênio"),
                            ("COLLABORATION_AGREEMENT", "Termo de Colaboração"),
                            ("PROMOTION_AGREEMENT", "Termo de Fomento"),
                            ("DONATION_AGREEMENT", "Contrato de Doação"),
                            ("MANAGEMENT_AGREEMENT", "Contrato de Gestão"),
                            ("TRANSFER_AGREEMENT", "Contrato de Repasse"),
                            ("PARTNERSHIP_AGREEMENT", "Termo de Parceria"),
                        ],
                        default="NOT_APPLIABLE",
                        max_length=23,
                        verbose_name="Categoria",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fonte de Recurso",
                "verbose_name_plural": "Fonte de Recursos",
            },
        ),
        migrations.CreateModel(
            name="Accountability",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "month",
                    models.IntegerField(
                        choices=[
                            (1, "janeiro"),
                            (2, "fevereiro"),
                            (3, "março"),
                            (4, "abril"),
                            (5, "maio"),
                            (6, "junho"),
                            (7, "julho"),
                            (8, "agosto"),
                            (9, "setembro"),
                            (10, "outubro"),
                            (11, "novembro"),
                            (12, "dezembro"),
                        ],
                        default=1,
                        verbose_name="Mês",
                    ),
                ),
                ("year", models.IntegerField(default=0, verbose_name="Ano")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ANALYZING", "em análise"),
                            ("CORRECTING", "correção"),
                            ("APPROVED", "aprovado"),
                            ("APPROVED_WITH_PENDENCE", "aprovado com ressalva"),
                            ("REJECTED", "rejeitado"),
                        ],
                        default="ANALYZING",
                        max_length=22,
                        verbose_name="Status",
                    ),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accountabilities",
                        to="contracts.contract",
                        verbose_name="Contrato",
                    ),
                ),
            ],
            options={
                "verbose_name": "Relatório",
                "verbose_name_plural": "Relatórios",
            },
        ),
        migrations.CreateModel(
            name="Expense",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("paid", models.BooleanField(default=False, verbose_name="Pago")),
                (
                    "reconciled",
                    models.BooleanField(default=False, verbose_name="Conciliado"),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Valor da Despesa"
                    ),
                ),
                (
                    "accountability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expenses",
                        to="accountability.accountability",
                        verbose_name="Prestação",
                    ),
                ),
            ],
            options={
                "verbose_name": "Despesa",
                "verbose_name_plural": "Despesas",
            },
        ),
        migrations.CreateModel(
            name="AccountabilityFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "category",
                    models.CharField(max_length=128, verbose_name="Tipo de Anexo"),
                ),
                (
                    "expense",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accountabilitie_files",
                        to="accountability.expense",
                        verbose_name="Despesa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Receita",
                "verbose_name_plural": "Receitas",
            },
        ),
        migrations.CreateModel(
            name="ExpenseAnalysis",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ANALYZING", "em análise"),
                            ("CORRECTING", "correção"),
                            ("APPROVED", "aprovado"),
                            ("APPROVED_WITH_PENDENCE", "aprovado com ressalva"),
                            ("REJECTED", "rejeitado"),
                        ],
                        default="ANALYZING",
                        max_length=22,
                        verbose_name="Status",
                    ),
                ),
                (
                    "comments",
                    models.CharField(max_length=256, verbose_name="Comentários"),
                ),
                (
                    "pending",
                    models.CharField(max_length=256, verbose_name="Pendências"),
                ),
                (
                    "expense",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expenses_analysis",
                        to="accountability.expense",
                        verbose_name="Despesa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Análise de Despesa",
                "verbose_name_plural": "Análise de Despesas",
            },
        ),
    ]
