# Generated by Django 5.1.6 on 2025-04-04 00:11

import uuid

import django.db.models.deletion
import django.db.models.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accountability", "0019_expense_conciled_at_historicalexpense_conciled_at"),
        ("accounts", "0018_alter_user_cnpj"),
        ("contracts", "0028_contractitempurchaseprocessdocument_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalPartnershipTransparency",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Última atualização"
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(default=True, verbose_name="Visível no portal"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracts.contract",
                        verbose_name="Contrato",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.organization",
                        verbose_name="Organização",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Informação de Transparência",
                "verbose_name_plural": "historical Informações de Transparência",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="PartnershipTransparency",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última atualização"
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(default=True, verbose_name="Visível no portal"),
                ),
                (
                    "contract",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transparency_info",
                        to="contracts.contract",
                        verbose_name="Contrato",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transparency_info",
                        to="accounts.organization",
                        verbose_name="Organização",
                    ),
                ),
            ],
            options={
                "verbose_name": "Informação de Transparência",
                "verbose_name_plural": "Informações de Transparência",
            },
        ),
        migrations.CreateModel(
            name="IrregularityReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "report_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data do relatório"
                    ),
                ),
                (
                    "description",
                    models.TextField(verbose_name="Descrição da irregularidade"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pendente"),
                            ("INVESTIGATING", "Em investigação"),
                            ("RESOLVED", "Resolvido"),
                            ("REJECTED", "Rejeitado"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "resolution",
                    models.TextField(blank=True, null=True, verbose_name="Resolução"),
                ),
                (
                    "partnership",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="irregularity_reports",
                        to="transparency_portal.partnershiptransparency",
                        verbose_name="Parceria",
                    ),
                ),
            ],
            options={
                "verbose_name": "Relatório de Irregularidade",
                "verbose_name_plural": "Relatórios de Irregularidades",
                "ordering": ["-report_date"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalIrregularityReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "report_date",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Data do relatório"
                    ),
                ),
                (
                    "description",
                    models.TextField(verbose_name="Descrição da irregularidade"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pendente"),
                            ("INVESTIGATING", "Em investigação"),
                            ("RESOLVED", "Resolvido"),
                            ("REJECTED", "Rejeitado"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "resolution",
                    models.TextField(blank=True, null=True, verbose_name="Resolução"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "partnership",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="transparency_portal.partnershiptransparency",
                        verbose_name="Parceria",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Relatório de Irregularidade",
                "verbose_name_plural": "historical Relatórios de Irregularidades",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFinancialTransfer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("transfer_date", models.DateField(verbose_name="Data do repasse")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Valor"
                    ),
                ),
                (
                    "account",
                    models.CharField(max_length=255, verbose_name="Conta creditada"),
                ),
                (
                    "document_type",
                    models.CharField(
                        max_length=100, verbose_name="Tipo de instrumento"
                    ),
                ),
                (
                    "document_number",
                    models.CharField(
                        max_length=100, verbose_name="Número do instrumento"
                    ),
                ),
                (
                    "document_year",
                    models.IntegerField(verbose_name="Ano do instrumento"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "partnership",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="transparency_portal.partnershiptransparency",
                        verbose_name="Parceria",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Repasse Financeiro",
                "verbose_name_plural": "historical Repasses Financeiros",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAccountabilityReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "activities_description",
                    models.TextField(verbose_name="Descrição das atividades"),
                ),
                (
                    "goals_achievement",
                    models.TextField(verbose_name="Comprovação do alcance das metas"),
                ),
                (
                    "expected_results",
                    models.TextField(verbose_name="Resultados esperados"),
                ),
                (
                    "rejection_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="Motivo da rejeição"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "accountability",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accountability.accountability",
                        verbose_name="Prestação de contas",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "partnership",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="transparency_portal.partnershiptransparency",
                        verbose_name="Parceria",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Relatório de Prestação de Contas",
                "verbose_name_plural": "historical Relatórios de Prestação de Contas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="FinancialTransfer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("transfer_date", models.DateField(verbose_name="Data do repasse")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Valor"
                    ),
                ),
                (
                    "account",
                    models.CharField(max_length=255, verbose_name="Conta creditada"),
                ),
                (
                    "document_type",
                    models.CharField(
                        max_length=100, verbose_name="Tipo de instrumento"
                    ),
                ),
                (
                    "document_number",
                    models.CharField(
                        max_length=100, verbose_name="Número do instrumento"
                    ),
                ),
                (
                    "document_year",
                    models.IntegerField(verbose_name="Ano do instrumento"),
                ),
                (
                    "partnership",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfers",
                        to="transparency_portal.partnershiptransparency",
                        verbose_name="Parceria",
                    ),
                ),
            ],
            options={
                "verbose_name": "Repasse Financeiro",
                "verbose_name_plural": "Repasses Financeiros",
                "ordering": ["-transfer_date"],
            },
        ),
        migrations.CreateModel(
            name="AccountabilityReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "activities_description",
                    models.TextField(verbose_name="Descrição das atividades"),
                ),
                (
                    "goals_achievement",
                    models.TextField(verbose_name="Comprovação do alcance das metas"),
                ),
                (
                    "expected_results",
                    models.TextField(verbose_name="Resultados esperados"),
                ),
                (
                    "rejection_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="Motivo da rejeição"
                    ),
                ),
                (
                    "accountability",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transparency_report",
                        to="accountability.accountability",
                        verbose_name="Prestação de contas",
                    ),
                ),
                (
                    "partnership",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accountability_reports",
                        to="transparency_portal.partnershiptransparency",
                        verbose_name="Parceria",
                    ),
                ),
            ],
            options={
                "verbose_name": "Relatório de Prestação de Contas",
                "verbose_name_plural": "Relatórios de Prestação de Contas",
            },
        ),
    ]
