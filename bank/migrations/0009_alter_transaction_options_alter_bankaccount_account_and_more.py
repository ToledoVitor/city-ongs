# Generated by Django 5.1.6 on 2025-03-22 23:21

from decimal import Decimal

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("accountability", "0015_alter_resourcesource_options_and_more"),
        (
            "accounts",
            "0011_alter_user_options_alter_cityhall_document_and_more",
        ),
        ("bank", "0008_alter_bankaccount_organization_and_more"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="transaction",
            options={
                "ordering": ["-date", "-id"],
                "verbose_name": "Movimentação Bancária",
                "verbose_name_plural": "Movimentações Bancárias",
            },
        ),
        migrations.AlterField(
            model_name="bankaccount",
            name="account",
            field=models.CharField(
                help_text="Bank account number",
                max_length=16,
                verbose_name="Número da Conta",
            ),
        ),
        migrations.AlterField(
            model_name="bankaccount",
            name="account_type",
            field=models.CharField(
                choices=[
                    ("CHECKING", "conta corrente"),
                    ("INVESTING", "investimento"),
                ],
                default="CHECKING",
                help_text="Type of bank account (checking or investment)",
                max_length=9,
                verbose_name="Tipo da Conta",
            ),
        ),
        migrations.AlterField(
            model_name="bankaccount",
            name="agency",
            field=models.CharField(
                blank=True,
                help_text="Bank branch/agency number",
                max_length=128,
                null=True,
                verbose_name="Agência",
            ),
        ),
        migrations.AlterField(
            model_name="bankaccount",
            name="balance",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Current account balance",
                max_digits=12,
                verbose_name="Saldo Atual",
            ),
        ),
        migrations.AlterField(
            model_name="bankaccount",
            name="bank_id",
            field=models.IntegerField(
                help_text="Bank identification number",
                verbose_name="Id do Banco",
            ),
        ),
        migrations.AlterField(
            model_name="bankaccount",
            name="bank_name",
            field=models.CharField(
                help_text="Name of the bank or financial institution",
                max_length=128,
                verbose_name="Nome do Banco",
            ),
        ),
        migrations.AlterField(
            model_name="bankaccount",
            name="origin",
            field=models.CharField(
                choices=[
                    ("MUNICIPAL", "Municipal"),
                    ("FEDERAL", "Federal"),
                    ("STATE", "Estadual"),
                    ("COUNTERPART_PARTNER", "Contrapartida de parceiro"),
                    ("PRIVATE_SPONSOR", "Patrocinador privado"),
                ],
                default="MUNICIPAL",
                help_text="Source of funds for this account",
                max_length=19,
                verbose_name="Origem da Fonte",
            ),
        ),
        migrations.AlterField(
            model_name="bankstatement",
            name="bank_account",
            field=models.ForeignKey(
                help_text="The bank account this statement belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="statements",
                to="bank.bankaccount",
                verbose_name="Conta Bancária",
            ),
        ),
        migrations.AlterField(
            model_name="bankstatement",
            name="closing_balance",
            field=models.DecimalField(
                decimal_places=2,
                help_text="The balance at the end of the statement period",
                max_digits=12,
                verbose_name="Saldo no Dia Final",
            ),
        ),
        migrations.AlterField(
            model_name="bankstatement",
            name="opening_balance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="The balance at the start of the statement period",
                max_digits=12,
                null=True,
                verbose_name="Saldo no Dia Inicial",
            ),
        ),
        migrations.AlterField(
            model_name="bankstatement",
            name="reference_month",
            field=models.IntegerField(
                choices=[
                    (1, "janeiro"),
                    (2, "fevereiro"),
                    (3, "março"),
                    (4, "abril"),
                    (5, "maio"),
                    (6, "junho"),
                    (7, "julho"),
                    (8, "agosto"),
                    (9, "setembro"),
                    (10, "outubro"),
                    (11, "novembro"),
                    (12, "dezembro"),
                ],
                default=1,
                help_text="The month this statement refers to",
                verbose_name="Mês",
            ),
        ),
        migrations.AlterField(
            model_name="bankstatement",
            name="reference_year",
            field=models.IntegerField(
                default=0,
                help_text="The year this statement refers to",
                verbose_name="Ano",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankaccount",
            name="account",
            field=models.CharField(
                help_text="Bank account number",
                max_length=16,
                verbose_name="Número da Conta",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankaccount",
            name="account_type",
            field=models.CharField(
                choices=[
                    ("CHECKING", "conta corrente"),
                    ("INVESTING", "investimento"),
                ],
                default="CHECKING",
                help_text="Type of bank account (checking or investment)",
                max_length=9,
                verbose_name="Tipo da Conta",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankaccount",
            name="agency",
            field=models.CharField(
                blank=True,
                help_text="Bank branch/agency number",
                max_length=128,
                null=True,
                verbose_name="Agência",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankaccount",
            name="balance",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Current account balance",
                max_digits=12,
                verbose_name="Saldo Atual",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankaccount",
            name="bank_id",
            field=models.IntegerField(
                help_text="Bank identification number",
                verbose_name="Id do Banco",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankaccount",
            name="bank_name",
            field=models.CharField(
                help_text="Name of the bank or financial institution",
                max_length=128,
                verbose_name="Nome do Banco",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankaccount",
            name="origin",
            field=models.CharField(
                choices=[
                    ("MUNICIPAL", "Municipal"),
                    ("FEDERAL", "Federal"),
                    ("STATE", "Estadual"),
                    ("COUNTERPART_PARTNER", "Contrapartida de parceiro"),
                    ("PRIVATE_SPONSOR", "Patrocinador privado"),
                ],
                default="MUNICIPAL",
                help_text="Source of funds for this account",
                max_length=19,
                verbose_name="Origem da Fonte",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankstatement",
            name="bank_account",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="The bank account this statement belongs to",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="bank.bankaccount",
                verbose_name="Conta Bancária",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankstatement",
            name="closing_balance",
            field=models.DecimalField(
                decimal_places=2,
                help_text="The balance at the end of the statement period",
                max_digits=12,
                verbose_name="Saldo no Dia Final",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankstatement",
            name="opening_balance",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="The balance at the start of the statement period",
                max_digits=12,
                null=True,
                verbose_name="Saldo no Dia Inicial",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankstatement",
            name="reference_month",
            field=models.IntegerField(
                choices=[
                    (1, "janeiro"),
                    (2, "fevereiro"),
                    (3, "março"),
                    (4, "abril"),
                    (5, "maio"),
                    (6, "junho"),
                    (7, "julho"),
                    (8, "agosto"),
                    (9, "setembro"),
                    (10, "outubro"),
                    (11, "novembro"),
                    (12, "dezembro"),
                ],
                default=1,
                help_text="The month this statement refers to",
                verbose_name="Mês",
            ),
        ),
        migrations.AlterField(
            model_name="historicalbankstatement",
            name="reference_year",
            field=models.IntegerField(
                default=0,
                help_text="The year this statement refers to",
                verbose_name="Ano",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltransaction",
            name="amount",
            field=models.DecimalField(
                decimal_places=2,
                help_text="The amount of the transaction (positive for credits, negative for debits)",
                max_digits=12,
                verbose_name="Valor da Transação",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltransaction",
            name="bank_account",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="The bank account this transaction belongs to",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="bank.bankaccount",
                verbose_name="Conta Bancária",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltransaction",
            name="date",
            field=models.DateField(
                help_text="The date when the transaction occurred",
                verbose_name="Data da Transação",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltransaction",
            name="expense",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Associated expense record if this is an expense transaction",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="accountability.expense",
                verbose_name="Despesa",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltransaction",
            name="memo",
            field=models.CharField(
                blank=True,
                help_text="Additional notes or comments about the transaction",
                max_length=256,
                null=True,
                verbose_name="Notas Adicionais (opcional)",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltransaction",
            name="name",
            field=models.CharField(
                blank=True,
                help_text="Description or name of the transaction",
                max_length=128,
                null=True,
                verbose_name="Nome",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltransaction",
            name="revenue",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Associated revenue record if this is a revenue transaction",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="accountability.revenue",
                verbose_name="Receita",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltransaction",
            name="transaction_number",
            field=models.CharField(
                blank=True,
                help_text="Unique identifier for the transaction from the bank",
                max_length=32,
                null=True,
                verbose_name="Id da Transação",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltransaction",
            name="transaction_type",
            field=models.CharField(
                choices=[
                    ("DEBIT", "débito"),
                    ("CREDIT", "crédito"),
                    ("INT", "juros"),
                    ("DIV", "dividendos"),
                    ("FEE", "taxa"),
                    ("SRVCHG", "taxa de serviço"),
                    ("DEP", "depósito"),
                    ("ATM", "caixa eletrônico"),
                    ("POS", "ponto de venda"),
                    ("XFER", "transferência entre contas"),
                    ("CHECK", "cheque"),
                    ("PAYMENT", "fatura ou débito"),
                    ("CASH", "saque"),
                    ("DIRECTDEP", "depósito direto"),
                    ("DIRECTDEBIT", "débito automático"),
                    ("REPEATPMT", "pagamento recorrente"),
                    ("INCOME", "retorno de investimentos"),
                    ("OTHER", "outros"),
                ],
                default="OTHER",
                help_text="The type of transaction (e.g., credit, debit, transfer)",
                max_length=32,
                verbose_name="Tipo da Transação",
            ),
        ),
        migrations.AlterField(
            model_name="transaction",
            name="amount",
            field=models.DecimalField(
                decimal_places=2,
                help_text="The amount of the transaction (positive for credits, negative for debits)",
                max_digits=12,
                verbose_name="Valor da Transação",
            ),
        ),
        migrations.AlterField(
            model_name="transaction",
            name="bank_account",
            field=models.ForeignKey(
                help_text="The bank account this transaction belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transactions",
                to="bank.bankaccount",
                verbose_name="Conta Bancária",
            ),
        ),
        migrations.AlterField(
            model_name="transaction",
            name="date",
            field=models.DateField(
                help_text="The date when the transaction occurred",
                verbose_name="Data da Transação",
            ),
        ),
        migrations.AlterField(
            model_name="transaction",
            name="expense",
            field=models.ForeignKey(
                blank=True,
                help_text="Associated expense record if this is an expense transaction",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="transactions",
                to="accountability.expense",
                verbose_name="Despesa",
            ),
        ),
        migrations.AlterField(
            model_name="transaction",
            name="expenses",
            field=models.ManyToManyField(
                help_text="Multiple expenses associated with this transaction",
                related_name="bank_transactions",
                to="accountability.expense",
                verbose_name="Despesas",
            ),
        ),
        migrations.AlterField(
            model_name="transaction",
            name="memo",
            field=models.CharField(
                blank=True,
                help_text="Additional notes or comments about the transaction",
                max_length=256,
                null=True,
                verbose_name="Notas Adicionais (opcional)",
            ),
        ),
        migrations.AlterField(
            model_name="transaction",
            name="name",
            field=models.CharField(
                blank=True,
                help_text="Description or name of the transaction",
                max_length=128,
                null=True,
                verbose_name="Nome",
            ),
        ),
        migrations.AlterField(
            model_name="transaction",
            name="revenue",
            field=models.ForeignKey(
                blank=True,
                help_text="Associated revenue record if this is a revenue transaction",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="transactions",
                to="accountability.revenue",
                verbose_name="Receita",
            ),
        ),
        migrations.AlterField(
            model_name="transaction",
            name="revenues",
            field=models.ManyToManyField(
                help_text="Multiple revenues associated with this transaction",
                related_name="bank_transactions",
                to="accountability.revenue",
                verbose_name="Receitas",
            ),
        ),
        migrations.AlterField(
            model_name="transaction",
            name="transaction_number",
            field=models.CharField(
                blank=True,
                help_text="Unique identifier for the transaction from the bank",
                max_length=32,
                null=True,
                verbose_name="Id da Transação",
            ),
        ),
        migrations.AlterField(
            model_name="transaction",
            name="transaction_type",
            field=models.CharField(
                choices=[
                    ("DEBIT", "débito"),
                    ("CREDIT", "crédito"),
                    ("INT", "juros"),
                    ("DIV", "dividendos"),
                    ("FEE", "taxa"),
                    ("SRVCHG", "taxa de serviço"),
                    ("DEP", "depósito"),
                    ("ATM", "caixa eletrônico"),
                    ("POS", "ponto de venda"),
                    ("XFER", "transferência entre contas"),
                    ("CHECK", "cheque"),
                    ("PAYMENT", "fatura ou débito"),
                    ("CASH", "saque"),
                    ("DIRECTDEP", "depósito direto"),
                    ("DIRECTDEBIT", "débito automático"),
                    ("REPEATPMT", "pagamento recorrente"),
                    ("INCOME", "retorno de investimentos"),
                    ("OTHER", "outros"),
                ],
                default="OTHER",
                help_text="The type of transaction (e.g., credit, debit, transfer)",
                max_length=32,
                verbose_name="Tipo da Transação",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="bankaccount",
            unique_together={("organization", "bank_name", "account", "account_type")},
        ),
        migrations.AddIndex(
            model_name="bankaccount",
            index=models.Index(
                fields=["bank_name", "account"],
                name="bank_bankac_bank_na_12c426_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bankaccount",
            index=models.Index(
                fields=["account_type"], name="bank_bankac_account_ed7b30_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bankaccount",
            index=models.Index(fields=["origin"], name="bank_bankac_origin_06e584_idx"),
        ),
        migrations.AddIndex(
            model_name="bankstatement",
            index=models.Index(
                fields=["bank_account", "reference_month", "reference_year"],
                name="bank_bankst_bank_ac_83b054_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bankstatement",
            index=models.Index(
                fields=["reference_month", "reference_year"],
                name="bank_bankst_referen_7e1081_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["bank_account", "date"],
                name="bank_transa_bank_ac_34371a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_type", "date"],
                name="bank_transa_transac_5a1cc2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_number"],
                name="bank_transa_transac_365a0b_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="bankstatement",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("bank_account", "reference_month", "reference_year"),
                name="unique_bank_statement_per_month_year",
            ),
        ),
    ]
