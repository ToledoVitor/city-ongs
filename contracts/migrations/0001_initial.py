# Generated by Django 5.1.4 on 2025-01-20 13:09

import uuid

import django.db.models.deletion
import django.db.models.fields
import django_cpf_cnpj.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("bank", "__first__"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Nome")),
                ("cnpj", django_cpf_cnpj.fields.CNPJField(max_length=18)),
            ],
            options={
                "verbose_name": "Empresa",
                "verbose_name_plural": "Empresas",
            },
        ),
        migrations.CreateModel(
            name="ContractAddress",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("street", models.CharField(max_length=128, verbose_name="Rua")),
                ("number", models.IntegerField(verbose_name="Número")),
                (
                    "complement",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Complemento",
                    ),
                ),
                ("district", models.CharField(max_length=128, verbose_name="Bairro")),
                ("city", models.CharField(max_length=128, verbose_name="Cidade")),
                ("uf", models.CharField(max_length=128, verbose_name="UF")),
                ("postal_code", models.CharField(max_length=8, verbose_name="CEP")),
            ],
            options={
                "verbose_name": "Endereço",
                "verbose_name_plural": "Endereços",
            },
        ),
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "name",
                    models.CharField(max_length=128, verbose_name="Nome do contrato"),
                ),
                (
                    "code",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Código do contrato"
                    ),
                ),
                ("objective", models.CharField(max_length=128, verbose_name="Objeto")),
                (
                    "total_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        verbose_name="Valor do contrato",
                    ),
                ),
                (
                    "start_of_vigency",
                    models.DateField(verbose_name="Começo da vigência"),
                ),
                ("end_of_vigency", models.DateField(verbose_name="Fim da vigência")),
                (
                    "area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contracts",
                        to="accounts.area",
                        verbose_name="Area",
                    ),
                ),
                (
                    "checking_account",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="checking_account",
                        to="bank.bankaccount",
                        verbose_name="Conta Corrente",
                    ),
                ),
                (
                    "contractor_company",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company_contracts",
                        to="contracts.company",
                        verbose_name="Contratante",
                    ),
                ),
                (
                    "contractor_manager",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company_manager_contracts",
                        to="contracts.company",
                        verbose_name="Gestor do Contratante",
                    ),
                ),
                (
                    "hired_company",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hired_contracts",
                        to="contracts.company",
                        verbose_name="Contratada",
                    ),
                ),
                (
                    "hired_manager",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hired_manager_contracts",
                        to="contracts.company",
                        verbose_name="Gestor do Contratada",
                    ),
                ),
                (
                    "investing_account",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="investing_contracts",
                        to="bank.bankaccount",
                        verbose_name="Conta Investimento",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contracts",
                        to="accounts.organization",
                        verbose_name="Organização",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contrato",
                "verbose_name_plural": "Contratos",
            },
        ),
        migrations.CreateModel(
            name="ContractAddendum",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "start_of_vigency",
                    models.DateField(verbose_name="Começo da vigência"),
                ),
                ("end_of_vigency", models.DateField(verbose_name="Fim da vigência")),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addendums",
                        to="contracts.contract",
                        verbose_name="Contrato",
                    ),
                ),
            ],
            options={
                "verbose_name": "Aditivo de Contrato",
                "verbose_name_plural": "Aditivos de Contrato",
            },
        ),
        migrations.CreateModel(
            name="ContractGoal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Item")),
                (
                    "objective",
                    models.CharField(max_length=256, verbose_name="Objetivo"),
                ),
                (
                    "methodology",
                    models.CharField(max_length=256, verbose_name="Metodologia"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ANALYZING", "em análise"),
                            ("CORRECTING", "correção"),
                            ("APPROVED", "aprovado"),
                            ("APPROVED_WITH_PENDENCE", "aprovado com ressalva"),
                            ("REJECTED", "rejeitado"),
                        ],
                        default="ANALYZING",
                        max_length=22,
                        verbose_name="Status",
                    ),
                ),
                (
                    "status_pendencies",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Pendências e erros",
                    ),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="goals",
                        to="contracts.contract",
                        verbose_name="Contrato",
                    ),
                ),
            ],
            options={
                "verbose_name": "Meta",
                "verbose_name_plural": "Metas",
            },
        ),
        migrations.CreateModel(
            name="ContractItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Item")),
                (
                    "objective",
                    models.CharField(max_length=256, verbose_name="Objetivo"),
                ),
                (
                    "methodology",
                    models.CharField(max_length=256, verbose_name="Metodologia"),
                ),
                (
                    "month_quantity",
                    models.PositiveIntegerField(verbose_name="Quantidade de Meses"),
                ),
                (
                    "month_expense",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Custo Mensal"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(max_length=32, verbose_name="Tipo da Unidade"),
                ),
                (
                    "nature",
                    models.CharField(
                        choices=[
                            (
                                "PERMANENT_GOODS_AND_MATERIALS",
                                "Bens e Materiais permanentes",
                            ),
                            (
                                "COMPUTER_GOODS_AND_EQUIPMENT",
                                "Bens e equipamentos de informática",
                            ),
                            (
                                "HOSPITAL_GOODS_AND_EQUIPMENT",
                                "Bens e equipamentos hospitalares",
                            ),
                            ("FUEL", "Combustível"),
                            ("BANKING_EXPENSES", "Despesas bancárias"),
                            ("BANKING_IOF", "IOF"),
                            ("BANKING_IRRF", "IRRF"),
                            ("INTEREST", "Juros"),
                            ("FOODSTUFS", "Gêneros Alimentícios"),
                            ("REAL_ESTATE_LEASE", "Locação de Imóveis"),
                            ("AMBULANCES", "Ambulâncias"),
                            ("COMPUTER_EQUIPMENT", "Equipamento de informática"),
                            (
                                "HOSPITCAL_MEDICAL_EQUIPMENT",
                                "Equipamento médico hospitalar",
                            ),
                            ("LAUNDRY_LINEN", "Lavanderia e enxoval"),
                            ("CAR_LEASE", "Locação de Carro"),
                            ("MISCELLANOUS_LEASES", "Locações Diversas"),
                            ("SOFTWARE_SYSTEM", "Sistema de software"),
                            (
                                "MEDICAL_HOSPITAL_SUPPLIES",
                                "Material Médico e Hospitalar",
                            ),
                            ("MEDICINES", "Medicamentos"),
                            ("WORKS", "Obras"),
                            (
                                "OTHER_ADMINISTRATIVE_EXPENSES",
                                "Despesas Administrativas",
                            ),
                            (
                                "RETURN_OF_FUNDS",
                                "Devolução de Recurso ao Órgão Concedente",
                            ),
                            ("PARKING_DRIVING_TAXI", "Estacionamento/condução/táxi"),
                            ("IPTU", "IPTU"),
                            (
                                "TAXES_FEES_CONTRIBUTIONS",
                                "Impostos, Taxas e Contribuições",
                            ),
                            ("OTHER_EXPENSES", "Outras despesas - Diversos"),
                            ("INSURANCE", "Seguros"),
                            ("TRAVEL_TICKET_STAY", "Viagens (passagem, hospedagem)"),
                            ("COOKING_GAS", "Gás de Cozinha"),
                            ("COMPUTER_SUPPLIES", "Materiais de Informática"),
                            (
                                "MATERIALS_FOR_SMALL_REPAIRS",
                                "Materiais para Pequenos Reparos",
                            ),
                            ("EDUCATIONAL_MATERIAL", "Material Pedagógico"),
                            (
                                "HYGIENE_CLEANING_SUPPLIES_UNIFORMS",
                                "Material de Higiene/Limpeza/Uniformes",
                            ),
                            ("SPORTS_EQUIPMENTS", "Material esportivo"),
                            ("UTENSILS", "Utensílios"),
                            ("OFFICE_SUPPLIES_1", "Materiais de Expediente"),
                            ("OFFICE_SUPPLIES_2", "Material de Escritório"),
                            (
                                "OFFICE_SUPPLIES_3",
                                "Material de expediente/correio/fotocópias",
                            ),
                            ("OTHER_CONSUMABLES", "Outros Materiais de Consumo"),
                            ("COMMON_WASTE_COLLECT", "Coleta de lixo comum"),
                            ("HOSPITAL_WASTE_COLLECT", "Coleta de lixo hospitalar"),
                            (
                                "CONSULTING_LEGAL_ADVICE",
                                "Consultoria/assessoria jurídica",
                            ),
                            ("CLEANING_MAINTENANCE", "Limpeza e conservação"),
                            (
                                "MAINTENANCE_HOSPITAL_EQUIPMENT",
                                "Manutenção - Equipamento Médico Hospitalar",
                            ),
                            (
                                "MAINTENANCE_COMPUTER_EQUIPMENT",
                                "Manutenção - Equipamento de Informática",
                            ),
                            (
                                "MAINTENANCE_BUILDING",
                                "Manutenção - predial e Imobiliário",
                            ),
                            ("MAINTENANCE_VEHICLE", "Manutenção de veículos"),
                            ("CONSTRUCTION", "Obras"),
                            ("MAINTENANCE_OTHERS", "Outras Manutenções"),
                            (
                                "LEGAL_THIRD_PARTY_SERVICES",
                                "Outros serviços de terceiros pessoa jurídica",
                            ),
                            ("ADVERTISING_PUBILICITY", "Publicidade e propaganda"),
                            (
                                "THERAPEUTIC_SUPPORT_SERVICE",
                                "Serviço de apoio diagnóstico terapêutico (sadt)",
                            ),
                            ("SERVICES_ACCOUNTING", "Serviços Contábeis"),
                            ("SERVICES_AUDITING", "Serviços de auditoria"),
                            (
                                "SERVIECS_IT",
                                "Serviços de tecnologia da informação (TI)",
                            ),
                            ("SERVICES_SURVEILLANCES", "Vigilância"),
                            ("THIRTHEENTH_SALARY", "13º Salário"),
                            ("APPRENTICES", "Aprendizes"),
                            ("MEDICAL_ASSISTENCE", "Assistência médica"),
                            ("ADVANCE_NOTICE", "Aviso prévio"),
                            ("BENEFITS", "Benefícios"),
                            ("INTERNSHIP_ALLOWANCE", "Bolsa Auxílio - estagiários"),
                            (
                                "INSS_CONTRIBUTION_SHARE",
                                "Contribuição ao INSS - Cota Patronal",
                            ),
                            ("PIS_CONTRIBUTION", "Contribuição ao PIS"),
                            ("SOCIAL_CONTRIBUTIONS", "Contribuições Sociais"),
                            (
                                "COURSES_TRAINING_RETRAINING",
                                "Cursos/treinamento/reciclagem",
                            ),
                            ("PERSONNEL_EXPENSES", "Despesas com Pessoal"),
                            ("COLLECTIVE_BARGAINING", "Dissídio coletivo"),
                            ("SOCIAL_CHARGES", "Encargos Sociais"),
                            ("FGTS", "FGTS"),
                            ("RESERVE_FUND", "Fundo de Reserva"),
                            ("VACATIONS", "Férias"),
                            ("BONUSES", "Gratificações"),
                            ("HR_INSS", "INSS"),
                            ("HR_IRRF", "IRRF"),
                            ("COMPENSATIONS", "Indenizações"),
                            (
                                "TERMINATION_EMPLOYMENT_CONTRACT",
                                "Rescisão de Contrato de Trabalho - TRCT",
                            ),
                            ("MISCELLANOUS_WITHHOLDINGS", "Retenções Diversas"),
                            (
                                "MANAGEMENT_SALARY",
                                "Salário diretoria (salários e ordenados)",
                            ),
                            (
                                "SALARIES_AND_WAGES",
                                "Salários e ordenados (exceto diretoria)",
                            ),
                            ("UNIFORMS", "Uniformes"),
                            ("FOOD_VOUCHERS", "Vale Alimentação"),
                            ("MEAL_VOUCHERS", "Vale Refeição"),
                            ("TRANSPORTATION_VOUCHERS", "Vale Transporte"),
                            ("INTERN_REMUNERATION", "Remuneração de Estagiários"),
                            (
                                "SERVICES_PF_THIRD_PARTIES",
                                "Serviços Prestados por Terceiro - PF",
                            ),
                            (
                                "SERVICES_PJ_THIRD_PARTIES",
                                "Serviços Prestados por Terceiro - PJ",
                            ),
                            ("MEDICAL_SERVICES", "Serviços médicos (*)"),
                            (
                                "MEDICAL_SERVICES_FOR_INDIVIDUALS",
                                "Serviços médicos pessoa física",
                            ),
                            (
                                "MEDICAL_SERVICES_FOR_ENTITIES",
                                "Serviços médicos pessoa jurídica",
                            ),
                            (
                                "PUBLIC_ADMINISTRATIVE_EXPENSES",
                                "Despesas Administrativas",
                            ),
                            ("ELECTRICITY", "Energia Elétrica"),
                            ("INTERNET_TV", "Internet/TV a cabo"),
                            ("TELEPHONE", "Telefone"),
                            ("PUBLIC_UTILITIES", "Utilidade Publica"),
                            ("WATER_SEWAGE", "Água e Esgoto"),
                        ],
                        max_length=34,
                        verbose_name="Natureza da Despesa",
                    ),
                ),
                (
                    "is_additive",
                    models.BooleanField(default=False, verbose_name="É aditivo?"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ANALYZING", "em análise"),
                            ("CORRECTING", "correção"),
                            ("APPROVED", "aprovado"),
                            ("APPROVED_WITH_PENDENCE", "aprovado com ressalva"),
                            ("REJECTED", "rejeitado"),
                        ],
                        default="ANALYZING",
                        max_length=22,
                        verbose_name="Status",
                    ),
                ),
                (
                    "status_pendencies",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Pendências e erros",
                    ),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="contracts.contract",
                        verbose_name="Contrato",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item",
                "verbose_name_plural": "Itens",
                "ordering": ("-month_expense",),
            },
        ),
        migrations.CreateModel(
            name="ContractStep",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Item")),
                (
                    "objective",
                    models.CharField(max_length=256, verbose_name="Objetivo"),
                ),
                (
                    "methodology",
                    models.CharField(max_length=256, verbose_name="Metodologia"),
                ),
                (
                    "resources",
                    models.CharField(max_length=256, verbose_name="Recursos"),
                ),
                (
                    "goal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_goals",
                        to="contracts.contractgoal",
                    ),
                ),
            ],
            options={
                "verbose_name": "Etapa",
                "verbose_name_plural": "Etapas",
            },
        ),
        migrations.CreateModel(
            name="HistoricalCompany",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Nome")),
                ("cnpj", django_cpf_cnpj.fields.CNPJField(max_length=18)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Empresa",
                "verbose_name_plural": "historical Empresas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalContract",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "name",
                    models.CharField(max_length=128, verbose_name="Nome do contrato"),
                ),
                (
                    "code",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Código do contrato"
                    ),
                ),
                ("objective", models.CharField(max_length=128, verbose_name="Objeto")),
                (
                    "total_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        verbose_name="Valor do contrato",
                    ),
                ),
                (
                    "start_of_vigency",
                    models.DateField(verbose_name="Começo da vigência"),
                ),
                ("end_of_vigency", models.DateField(verbose_name="Fim da vigência")),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "area",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.area",
                        verbose_name="Area",
                    ),
                ),
                (
                    "checking_account",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="bank.bankaccount",
                        verbose_name="Conta Corrente",
                    ),
                ),
                (
                    "contractor_company",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracts.company",
                        verbose_name="Contratante",
                    ),
                ),
                (
                    "contractor_manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracts.company",
                        verbose_name="Gestor do Contratante",
                    ),
                ),
                (
                    "hired_company",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracts.company",
                        verbose_name="Contratada",
                    ),
                ),
                (
                    "hired_manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracts.company",
                        verbose_name="Gestor do Contratada",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "investing_account",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="bank.bankaccount",
                        verbose_name="Conta Investimento",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="accounts.organization",
                        verbose_name="Organização",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Contrato",
                "verbose_name_plural": "historical Contratos",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalContractAddendum",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "start_of_vigency",
                    models.DateField(verbose_name="Começo da vigência"),
                ),
                ("end_of_vigency", models.DateField(verbose_name="Fim da vigência")),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracts.contract",
                        verbose_name="Contrato",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Aditivo de Contrato",
                "verbose_name_plural": "historical Aditivos de Contrato",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalContractGoal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Item")),
                (
                    "objective",
                    models.CharField(max_length=256, verbose_name="Objetivo"),
                ),
                (
                    "methodology",
                    models.CharField(max_length=256, verbose_name="Metodologia"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ANALYZING", "em análise"),
                            ("CORRECTING", "correção"),
                            ("APPROVED", "aprovado"),
                            ("APPROVED_WITH_PENDENCE", "aprovado com ressalva"),
                            ("REJECTED", "rejeitado"),
                        ],
                        default="ANALYZING",
                        max_length=22,
                        verbose_name="Status",
                    ),
                ),
                (
                    "status_pendencies",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Pendências e erros",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracts.contract",
                        verbose_name="Contrato",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Meta",
                "verbose_name_plural": "historical Metas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalContractItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Item")),
                (
                    "objective",
                    models.CharField(max_length=256, verbose_name="Objetivo"),
                ),
                (
                    "methodology",
                    models.CharField(max_length=256, verbose_name="Metodologia"),
                ),
                (
                    "month_quantity",
                    models.PositiveIntegerField(verbose_name="Quantidade de Meses"),
                ),
                (
                    "month_expense",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Custo Mensal"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(max_length=32, verbose_name="Tipo da Unidade"),
                ),
                (
                    "nature",
                    models.CharField(
                        choices=[
                            (
                                "PERMANENT_GOODS_AND_MATERIALS",
                                "Bens e Materiais permanentes",
                            ),
                            (
                                "COMPUTER_GOODS_AND_EQUIPMENT",
                                "Bens e equipamentos de informática",
                            ),
                            (
                                "HOSPITAL_GOODS_AND_EQUIPMENT",
                                "Bens e equipamentos hospitalares",
                            ),
                            ("FUEL", "Combustível"),
                            ("BANKING_EXPENSES", "Despesas bancárias"),
                            ("BANKING_IOF", "IOF"),
                            ("BANKING_IRRF", "IRRF"),
                            ("INTEREST", "Juros"),
                            ("FOODSTUFS", "Gêneros Alimentícios"),
                            ("REAL_ESTATE_LEASE", "Locação de Imóveis"),
                            ("AMBULANCES", "Ambulâncias"),
                            ("COMPUTER_EQUIPMENT", "Equipamento de informática"),
                            (
                                "HOSPITCAL_MEDICAL_EQUIPMENT",
                                "Equipamento médico hospitalar",
                            ),
                            ("LAUNDRY_LINEN", "Lavanderia e enxoval"),
                            ("CAR_LEASE", "Locação de Carro"),
                            ("MISCELLANOUS_LEASES", "Locações Diversas"),
                            ("SOFTWARE_SYSTEM", "Sistema de software"),
                            (
                                "MEDICAL_HOSPITAL_SUPPLIES",
                                "Material Médico e Hospitalar",
                            ),
                            ("MEDICINES", "Medicamentos"),
                            ("WORKS", "Obras"),
                            (
                                "OTHER_ADMINISTRATIVE_EXPENSES",
                                "Despesas Administrativas",
                            ),
                            (
                                "RETURN_OF_FUNDS",
                                "Devolução de Recurso ao Órgão Concedente",
                            ),
                            ("PARKING_DRIVING_TAXI", "Estacionamento/condução/táxi"),
                            ("IPTU", "IPTU"),
                            (
                                "TAXES_FEES_CONTRIBUTIONS",
                                "Impostos, Taxas e Contribuições",
                            ),
                            ("OTHER_EXPENSES", "Outras despesas - Diversos"),
                            ("INSURANCE", "Seguros"),
                            ("TRAVEL_TICKET_STAY", "Viagens (passagem, hospedagem)"),
                            ("COOKING_GAS", "Gás de Cozinha"),
                            ("COMPUTER_SUPPLIES", "Materiais de Informática"),
                            (
                                "MATERIALS_FOR_SMALL_REPAIRS",
                                "Materiais para Pequenos Reparos",
                            ),
                            ("EDUCATIONAL_MATERIAL", "Material Pedagógico"),
                            (
                                "HYGIENE_CLEANING_SUPPLIES_UNIFORMS",
                                "Material de Higiene/Limpeza/Uniformes",
                            ),
                            ("SPORTS_EQUIPMENTS", "Material esportivo"),
                            ("UTENSILS", "Utensílios"),
                            ("OFFICE_SUPPLIES_1", "Materiais de Expediente"),
                            ("OFFICE_SUPPLIES_2", "Material de Escritório"),
                            (
                                "OFFICE_SUPPLIES_3",
                                "Material de expediente/correio/fotocópias",
                            ),
                            ("OTHER_CONSUMABLES", "Outros Materiais de Consumo"),
                            ("COMMON_WASTE_COLLECT", "Coleta de lixo comum"),
                            ("HOSPITAL_WASTE_COLLECT", "Coleta de lixo hospitalar"),
                            (
                                "CONSULTING_LEGAL_ADVICE",
                                "Consultoria/assessoria jurídica",
                            ),
                            ("CLEANING_MAINTENANCE", "Limpeza e conservação"),
                            (
                                "MAINTENANCE_HOSPITAL_EQUIPMENT",
                                "Manutenção - Equipamento Médico Hospitalar",
                            ),
                            (
                                "MAINTENANCE_COMPUTER_EQUIPMENT",
                                "Manutenção - Equipamento de Informática",
                            ),
                            (
                                "MAINTENANCE_BUILDING",
                                "Manutenção - predial e Imobiliário",
                            ),
                            ("MAINTENANCE_VEHICLE", "Manutenção de veículos"),
                            ("CONSTRUCTION", "Obras"),
                            ("MAINTENANCE_OTHERS", "Outras Manutenções"),
                            (
                                "LEGAL_THIRD_PARTY_SERVICES",
                                "Outros serviços de terceiros pessoa jurídica",
                            ),
                            ("ADVERTISING_PUBILICITY", "Publicidade e propaganda"),
                            (
                                "THERAPEUTIC_SUPPORT_SERVICE",
                                "Serviço de apoio diagnóstico terapêutico (sadt)",
                            ),
                            ("SERVICES_ACCOUNTING", "Serviços Contábeis"),
                            ("SERVICES_AUDITING", "Serviços de auditoria"),
                            (
                                "SERVIECS_IT",
                                "Serviços de tecnologia da informação (TI)",
                            ),
                            ("SERVICES_SURVEILLANCES", "Vigilância"),
                            ("THIRTHEENTH_SALARY", "13º Salário"),
                            ("APPRENTICES", "Aprendizes"),
                            ("MEDICAL_ASSISTENCE", "Assistência médica"),
                            ("ADVANCE_NOTICE", "Aviso prévio"),
                            ("BENEFITS", "Benefícios"),
                            ("INTERNSHIP_ALLOWANCE", "Bolsa Auxílio - estagiários"),
                            (
                                "INSS_CONTRIBUTION_SHARE",
                                "Contribuição ao INSS - Cota Patronal",
                            ),
                            ("PIS_CONTRIBUTION", "Contribuição ao PIS"),
                            ("SOCIAL_CONTRIBUTIONS", "Contribuições Sociais"),
                            (
                                "COURSES_TRAINING_RETRAINING",
                                "Cursos/treinamento/reciclagem",
                            ),
                            ("PERSONNEL_EXPENSES", "Despesas com Pessoal"),
                            ("COLLECTIVE_BARGAINING", "Dissídio coletivo"),
                            ("SOCIAL_CHARGES", "Encargos Sociais"),
                            ("FGTS", "FGTS"),
                            ("RESERVE_FUND", "Fundo de Reserva"),
                            ("VACATIONS", "Férias"),
                            ("BONUSES", "Gratificações"),
                            ("HR_INSS", "INSS"),
                            ("HR_IRRF", "IRRF"),
                            ("COMPENSATIONS", "Indenizações"),
                            (
                                "TERMINATION_EMPLOYMENT_CONTRACT",
                                "Rescisão de Contrato de Trabalho - TRCT",
                            ),
                            ("MISCELLANOUS_WITHHOLDINGS", "Retenções Diversas"),
                            (
                                "MANAGEMENT_SALARY",
                                "Salário diretoria (salários e ordenados)",
                            ),
                            (
                                "SALARIES_AND_WAGES",
                                "Salários e ordenados (exceto diretoria)",
                            ),
                            ("UNIFORMS", "Uniformes"),
                            ("FOOD_VOUCHERS", "Vale Alimentação"),
                            ("MEAL_VOUCHERS", "Vale Refeição"),
                            ("TRANSPORTATION_VOUCHERS", "Vale Transporte"),
                            ("INTERN_REMUNERATION", "Remuneração de Estagiários"),
                            (
                                "SERVICES_PF_THIRD_PARTIES",
                                "Serviços Prestados por Terceiro - PF",
                            ),
                            (
                                "SERVICES_PJ_THIRD_PARTIES",
                                "Serviços Prestados por Terceiro - PJ",
                            ),
                            ("MEDICAL_SERVICES", "Serviços médicos (*)"),
                            (
                                "MEDICAL_SERVICES_FOR_INDIVIDUALS",
                                "Serviços médicos pessoa física",
                            ),
                            (
                                "MEDICAL_SERVICES_FOR_ENTITIES",
                                "Serviços médicos pessoa jurídica",
                            ),
                            (
                                "PUBLIC_ADMINISTRATIVE_EXPENSES",
                                "Despesas Administrativas",
                            ),
                            ("ELECTRICITY", "Energia Elétrica"),
                            ("INTERNET_TV", "Internet/TV a cabo"),
                            ("TELEPHONE", "Telefone"),
                            ("PUBLIC_UTILITIES", "Utilidade Publica"),
                            ("WATER_SEWAGE", "Água e Esgoto"),
                        ],
                        max_length=34,
                        verbose_name="Natureza da Despesa",
                    ),
                ),
                (
                    "is_additive",
                    models.BooleanField(default=False, verbose_name="É aditivo?"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ANALYZING", "em análise"),
                            ("CORRECTING", "correção"),
                            ("APPROVED", "aprovado"),
                            ("APPROVED_WITH_PENDENCE", "aprovado com ressalva"),
                            ("REJECTED", "rejeitado"),
                        ],
                        default="ANALYZING",
                        max_length=22,
                        verbose_name="Status",
                    ),
                ),
                (
                    "status_pendencies",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Pendências e erros",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracts.contract",
                        verbose_name="Contrato",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Item",
                "verbose_name_plural": "historical Itens",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalContractStep",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name=django.db.models.fields.UUIDField,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Item")),
                (
                    "objective",
                    models.CharField(max_length=256, verbose_name="Objetivo"),
                ),
                (
                    "methodology",
                    models.CharField(max_length=256, verbose_name="Metodologia"),
                ),
                (
                    "resources",
                    models.CharField(max_length=256, verbose_name="Recursos"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "goal",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contracts.contractgoal",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Etapa",
                "verbose_name_plural": "historical Etapas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
